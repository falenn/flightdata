<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.imwiz.flightdata.parent</groupId>
	<artifactId>parent</artifactId>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	<properties>
		<version.com.imwiz.project.version>0.0.1-SNAPSHOT</version.com.imwiz.project.version>
		<maven.compiler.target>1.11</maven.compiler.target>
		<maven.compiler.source>1.11</maven.compiler.source>
		<version.java-release>11</version.java-release>
		<version.springframework>5.3.25</version.springframework>
		<version.spring-kafka>2.8.6</version.spring-kafka>
		<version.springframework.boot>2.7.9</version.springframework.boot>
		<version.springframework.integration>5.5.3</version.springframework.integration>
		<version.lombok>1.18.20</version.lombok>
		<version.jackson>2.14.2</version.jackson>
		<version.maven-surefire>2.22.2</version.maven-surefire>
		<version.maven-failsafe-plugin>2.22.2</version.maven-failsafe-plugin>
		<version.org.junit.jupiter>5.8.2</version.org.junit.jupiter>
		<version.org.slf4j>1.7.36</version.org.slf4j>
		<version.logback>1.3.5</version.logback>
		<version.org.awaitility>4.2.0</version.org.awaitility>
		<!-- these jars are version-set in actuator -->
		<version.io.micrometer>1.9.8</version.io.micrometer>
		<version.io.micrometer.prometheus>1.9.8</version.io.micrometer.prometheus>
	</properties>
	<dependencyManagement>
		<dependencies>
			<!-- project -->
			<dependency>
				<groupId>com.imwiz.flightdata</groupId>
				<artifactId>common-si</artifactId>
				<version>${version.com.imwiz.project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.imwiz.flightdata</groupId>
				<artifactId>model</artifactId>
				<version>${version.com.imwiz.project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.imwiz.flightdata</groupId>
				<artifactId>etl-subflow-example</artifactId>
				<version>${version.com.imwiz.project.version}</version>
				<type>jar</type>
			</dependency>
			<dependency>
				<groupId>com.imwiz.flightdata</groupId>
				<artifactId>etl-router-example</artifactId>
				<version>${version.com.imwiz.project.version}</version>
				<type>jar</type>
			</dependency>
			<!-- Spring Dependencies -->
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${version.springframework.boot}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>${version.springframework.boot}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-logging</artifactId>
				<version>${version.springframework.boot}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${version.springframework}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-logging</groupId>
						<artifactId>commons-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-test</artifactId>
				<version>${version.springframework.boot}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.hamcrest</groupId>
				<artifactId>hamcrest-all</artifactId>
				<version>1.3</version>
				<scope>test</scope>
			</dependency>
			<!-- Spring Integration -->
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-core</artifactId>
				<version>${version.springframework.integration}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-file</artifactId>
				<version>${version.springframework.integration}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-kafka</artifactId>
				<version>${version.springframework.integration}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-test</artifactId>
				<version>${version.springframework.integration}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-test-support</artifactId>
				<version>${version.springframework.integration}</version>
				<scope>test</scope>
			</dependency>
			<!-- spring kafka -->
			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka</artifactId>
				<version>${version.spring-kafka}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.kafka</groupId>
				<artifactId>spring-kafka-test</artifactId>
				<version>${version.spring-kafka}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${version.lombok}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${version.jackson}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${version.jackson}</version>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${version.org.junit.jupiter}</version>
			</dependency>
			<!-- metrics -->
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-core</artifactId>
				<version>${version.io.micrometer}</version>
			</dependency>
			<!-- dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-prometheus</artifactId>
				<version>${version.io.micrometer.prometheus}</version>
				<scope>runtime</scope>
			</dependency -->
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- Test -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<scope>test</scope>
		</dependency -->
		<!-- https://mvnrepository.com/artifact/org.awaitility/awaitility -->
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Modelling -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<!-- dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.1</version>
					<configuration>
						<release>${version.java-release}</release>
					</configuration>
				</plugin>
				<!-- This plugin should be used with jars with application main. -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${version.springframework.boot}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${version.maven-failsafe-plugin}</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${version.maven-surefire}</version>
				<dependencies>
					<!-- dependency>
						<groupId>org.junit.platform</groupId>
						<artifactId>junit-platform-surefire-provider</artifactId>
						<version>1.2.0</version>
					</dependency -->
					<dependency>
						<groupId>org.junit.jupiter</groupId>
						<artifactId>junit-jupiter-engine</artifactId>
						<version>${version.maven-surefire}</version>
					</dependency>
				</dependencies>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>src/test/java/</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>